import XMonad
import qualified XMonad.StackSet as W
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.ManageDocks
import XMonad.Actions.GridSelect
import XMonad.Prompt
import XMonad.Prompt.RunOrRaise
import XMonad.Prompt.Window
import XMonad.Prompt.Ssh
import XMonad.Layout.Circle
import XMonad.Util.Run(spawnPipe)
import XMonad.Util.EZConfig(additionalKeys)
import System.IO

myLayout = avoidStruts (tall ||| Mirror tall ||| Full ||| Circle)
    where
        tall = Tall 1 (3/100) (1/2)

main = do
    xmproc <- spawnPipe "/usr/bin/xmobar /home/bnicholas/.xmobarrc"
    trproc <- spawnPipe "trayer --edge top --align right --SetDockType true --SetPartialStrut true --monitor 0 --expand true --width 5 --transparent true --alpha 0 --tint 0x000000 --height 19"
    xmonad $ defaultConfig
        { modMask = mod4Mask
        , manaogeHook = manageDocks <+> manageHook defaultConfig
        , layoutHook = myLayout
        , logHook = dynamicLogWithPP xmobarPP
                        { ppOutput = hPutStrLn xmproc
                        , ppTitle = xmobarColor "green" "" . shorten 50
                        }
        , terminal = "urxvt"
        , focusedBorderColor = "grey"
        , normalBorderColor = "black"
        , workspaces = ["1:web", "2:edit", "3:mail", "4:chat", "5:music", "6:sql", "7:vm", "8:scratch", "9: scratch", "0:minimize"]
        } `additionalKeys`
        [ ((mod4Mask .|. shiftMask, xK_l), spawn "gnome-screensaver-command -l")
        , ((0, xK_Print), spawn "scrot")
        , ((mod1Mask, xK_g), goToSelected defaultGSConfig)
        , ((mod1Mask, xK_w), gridselectWorkspace defaultGSConfig W.greedyView)
        , ((mod1Mask, xK_r), runOrRaisePrompt defaultXPConfig)
        , ((mod1Mask, xK_d), windowPromptGoto defaultXPConfig)
        , ((mod1Mask .|. shiftMask, xK_k), sshPrompt defaultXPConfig)
        ]

